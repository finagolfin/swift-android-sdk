diff --git a/indexstore-db/Sources/IndexStoreDB/IndexStoreDB.swift b/indexstore-db/Sources/IndexStoreDB/IndexStoreDB.swift
index 7005561..ebb2e1d 100644
--- a/indexstore-db/Sources/IndexStoreDB/IndexStoreDB.swift
+++ b/indexstore-db/Sources/IndexStoreDB/IndexStoreDB.swift
@@ -19,6 +19,8 @@ import Foundation
 import Glibc
 #elseif os(Windows)
 import ucrt
+#elseif canImport(Android)
+import Android
 #else
 import Darwin.POSIX
 #endif
diff --git a/llbuild/products/llbuildSwift/BuildDBBindings.swift b/llbuild/products/llbuildSwift/BuildDBBindings.swift
index db8a9b72..78652cc7 100644
--- a/llbuild/products/llbuildSwift/BuildDBBindings.swift
+++ b/llbuild/products/llbuildSwift/BuildDBBindings.swift
@@ -17,6 +17,8 @@ import WinSDK
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #else
 #error("Missing libc or equivalent")
 #endif
diff --git a/llbuild/products/llbuildSwift/BuildKey.swift b/llbuild/products/llbuildSwift/BuildKey.swift
index 1d89c534..a59e895a 100644
--- a/llbuild/products/llbuildSwift/BuildKey.swift
+++ b/llbuild/products/llbuildSwift/BuildKey.swift
@@ -17,6 +17,8 @@ import WinSDK
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #else
 #error("Missing libc or equivalent")
 #endif
diff --git a/llbuild/products/llbuildSwift/BuildSystemBindings.swift b/llbuild/products/llbuildSwift/BuildSystemBindings.swift
index 85c8fe24..9566f66b 100644
--- a/llbuild/products/llbuildSwift/BuildSystemBindings.swift
+++ b/llbuild/products/llbuildSwift/BuildSystemBindings.swift
@@ -17,6 +17,8 @@ import WinSDK
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #else
 #error("Missing libc or equivalent")
 #endif
@@ -1235,7 +1237,7 @@ public final class BuildSystem {
         #elseif os(Windows)
         info.pointee.mod_time.seconds = UInt64(s.st_mtime)
         info.pointee.mod_time.nanoseconds = 0
-        #elseif canImport(Glibc) || canImport(Musl)
+        #elseif canImport(Glibc) || canImport(Musl) || canImport(Android)
         info.pointee.mod_time.seconds = UInt64(s.st_mtim.tv_sec)
         info.pointee.mod_time.nanoseconds = UInt64(s.st_mtim.tv_nsec)
         #else
diff --git a/llbuild/products/llbuildSwift/BuildValue.swift b/llbuild/products/llbuildSwift/BuildValue.swift
index 2caa5947..b2af480f 100644
--- a/llbuild/products/llbuildSwift/BuildValue.swift
+++ b/llbuild/products/llbuildSwift/BuildValue.swift
@@ -17,6 +17,8 @@ import WinSDK
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #else
 #error("Missing libc or equivalent")
 #endif
diff --git a/llbuild/products/llbuildSwift/Internals.swift b/llbuild/products/llbuildSwift/Internals.swift
index 4e134288..3f5c4fe4 100644
--- a/llbuild/products/llbuildSwift/Internals.swift
+++ b/llbuild/products/llbuildSwift/Internals.swift
@@ -17,6 +17,8 @@ import WinSDK
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #else
 #error("Missing libc or equivalent")
 #endif
diff --git a/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/DisableSigpipe.swift b/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/DisableSigpipe.swift
index e9967f64..0630fe53 100644
--- a/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/DisableSigpipe.swift
+++ b/sourcekit-lsp/Sources/LanguageServerProtocolJSONRPC/DisableSigpipe.swift
@@ -14,9 +14,11 @@
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #endif
 
-#if canImport(Glibc) || canImport(Musl)
+#if canImport(Glibc) || canImport(Musl) || canImport(Android)
 // This is a lazily initialised global variable that when read for the first time, will ignore SIGPIPE.
 private let globallyIgnoredSIGPIPE: Bool = {
   /* no F_SETNOSIGPIPE on Linux :( */
diff --git a/sourcekit-lsp/Sources/SourceKitD/dlopen.swift b/sourcekit-lsp/Sources/SourceKitD/dlopen.swift
index 4adf5b44..07573da1 100644
--- a/sourcekit-lsp/Sources/SourceKitD/dlopen.swift
+++ b/sourcekit-lsp/Sources/SourceKitD/dlopen.swift
@@ -19,6 +19,8 @@ import Darwin
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #endif
 
 public final class DLHandle: Sendable {
diff --git a/sourcekit-lsp/Sources/SourceKitD/SKDRequestArray.swift b/sourcekit-lsp/Sources/SourceKitD/SKDRequestArray.swift
index a68c4ae3..f8aed9d7 100644
--- a/sourcekit-lsp/Sources/SourceKitD/SKDRequestArray.swift
+++ b/sourcekit-lsp/Sources/SourceKitD/SKDRequestArray.swift
@@ -18,6 +18,8 @@ import Glibc
 import Musl
 #elseif canImport(CRT)
 import CRT
+#elseif canImport(Android)
+import Android
 #endif
 
 extension SourceKitD {
diff --git a/sourcekit-lsp/Sources/SourceKitD/SKDRequestDictionary.swift b/sourcekit-lsp/Sources/SourceKitD/SKDRequestDictionary.swift
index 99e02502..7ff965bc 100644
--- a/sourcekit-lsp/Sources/SourceKitD/SKDRequestDictionary.swift
+++ b/sourcekit-lsp/Sources/SourceKitD/SKDRequestDictionary.swift
@@ -19,6 +19,8 @@ import Glibc
 import Musl
 #elseif canImport(CRT)
 import CRT
+#elseif canImport(Android)
+import Android
 #endif
 
 /// Values that can be stored in a `SKDRequestDictionary`.
diff --git a/sourcekit-lsp/Sources/SourceKitD/SKDResponse.swift b/sourcekit-lsp/Sources/SourceKitD/SKDResponse.swift
index 6f7ec1ba..a48af403 100644
--- a/sourcekit-lsp/Sources/SourceKitD/SKDResponse.swift
+++ b/sourcekit-lsp/Sources/SourceKitD/SKDResponse.swift
@@ -19,6 +19,8 @@ import Glibc
 import Musl
 #elseif canImport(CRT)
 import CRT
+#elseif canImport(Android)
+import Android
 #endif
 
 public final class SKDResponse: Sendable {
diff --git a/sourcekit-lsp/Sources/SourceKitD/SKDResponseArray.swift b/sourcekit-lsp/Sources/SourceKitD/SKDResponseArray.swift
index c2d4da58..79c32ee5 100644
--- a/sourcekit-lsp/Sources/SourceKitD/SKDResponseArray.swift
+++ b/sourcekit-lsp/Sources/SourceKitD/SKDResponseArray.swift
@@ -18,6 +18,8 @@ import Glibc
 import Musl
 #elseif canImport(CRT)
 import CRT
+#elseif canImport(Android)
+import Android
 #endif
 
 public final class SKDResponseArray: Sendable {
diff --git a/sourcekit-lsp/Sources/SourceKitD/SKDResponseDictionary.swift b/sourcekit-lsp/Sources/SourceKitD/SKDResponseDictionary.swift
index efb5d761..e8b8d250 100644
--- a/sourcekit-lsp/Sources/SourceKitD/SKDResponseDictionary.swift
+++ b/sourcekit-lsp/Sources/SourceKitD/SKDResponseDictionary.swift
@@ -18,6 +18,8 @@ import Glibc
 import Musl
 #elseif canImport(CRT)
 import CRT
+#elseif canImport(Android)
+import Android
 #endif
 
 public final class SKDResponseDictionary: Sendable {
diff --git a/swift-driver/Sources/SwiftDriver/Driver/ToolExecutionDelegate.swift b/swift-driver/Sources/SwiftDriver/Driver/ToolExecutionDelegate.swift
index 4d6577d0..0eef6e57 100644
--- a/swift-driver/Sources/SwiftDriver/Driver/ToolExecutionDelegate.swift
+++ b/swift-driver/Sources/SwiftDriver/Driver/ToolExecutionDelegate.swift
@@ -19,6 +19,8 @@ import WinSDK
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #else
 #error("Missing libc or equivalent")
 #endif
diff --git a/swift-driver/Sources/SwiftDriver/SwiftScan/Loader.swift b/swift-driver/Sources/SwiftDriver/SwiftScan/Loader.swift
index 92ec883f..2ab4e6fd 100644
--- a/swift-driver/Sources/SwiftDriver/SwiftScan/Loader.swift
+++ b/swift-driver/Sources/SwiftDriver/SwiftScan/Loader.swift
@@ -21,6 +21,8 @@ import Darwin
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #endif
 
 internal enum Loader {
diff --git a/swift-driver/Sources/SwiftDriver/Utilities/DateAdditions.swift b/swift-driver/Sources/SwiftDriver/Utilities/DateAdditions.swift
index fcad533d..8d924dbd 100644
--- a/swift-driver/Sources/SwiftDriver/Utilities/DateAdditions.swift
+++ b/swift-driver/Sources/SwiftDriver/Utilities/DateAdditions.swift
@@ -18,6 +18,8 @@ import Darwin
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #endif
 
 /// Represents a time point value with nanosecond precision.
diff --git a/swift-driver/Sources/SwiftDriver/Utilities/System.swift b/swift-driver/Sources/SwiftDriver/Utilities/System.swift
index c4fdaa89..a3b4d451 100644
--- a/swift-driver/Sources/SwiftDriver/Utilities/System.swift
+++ b/swift-driver/Sources/SwiftDriver/Utilities/System.swift
@@ -16,6 +16,8 @@ import Darwin
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #endif
 
 func argumentNeedsQuoting(_ argument: String) -> Bool {
diff --git a/swift-driver/Sources/swift-build-sdk-interfaces/main.swift b/swift-driver/Sources/swift-build-sdk-interfaces/main.swift
index 07eced80..a12a594a 100644
--- a/swift-driver/Sources/swift-build-sdk-interfaces/main.swift
+++ b/swift-driver/Sources/swift-build-sdk-interfaces/main.swift
@@ -19,6 +19,8 @@ import Darwin
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #endif
 
 import class TSCBasic.DiagnosticsEngine
diff --git a/swift-driver/Sources/swift-driver/main.swift b/swift-driver/Sources/swift-driver/main.swift
index 8126b659..e1f2f56f 100644
--- a/swift-driver/Sources/swift-driver/main.swift
+++ b/swift-driver/Sources/swift-driver/main.swift
@@ -20,6 +20,8 @@ import Darwin
 import Glibc
 #elseif canImport(Musl)
 import Musl
+#elseif canImport(Android)
+import Android
 #endif
 
 import Dispatch
diff --git a/swift-tools-support-core/Sources/TSCLibc/libc.swift b/swift-tools-support-core/Sources/TSCLibc/libc.swift
index 8c5c898..5c29f97 100644
--- a/swift-tools-support-core/Sources/TSCLibc/libc.swift
+++ b/swift-tools-support-core/Sources/TSCLibc/libc.swift
@@ -15,6 +15,8 @@
 #elseif os(Windows)
 @_exported import CRT
 @_exported import WinSDK
+#elseif canImport(Android)
+@_exported import Android
 #else
 @_exported import Darwin.C
 #endif
diff --git a/swift-tools-support-core/Sources/TSCUtility/FSWatch.swift b/swift-tools-support-core/Sources/TSCUtility/FSWatch.swift
index 5cea437..79499e9 100644
--- a/swift-tools-support-core/Sources/TSCUtility/FSWatch.swift
+++ b/swift-tools-support-core/Sources/TSCUtility/FSWatch.swift
@@ -54,7 +54,7 @@ public class FSWatch {
         self._watcher = NoOpWatcher(paths: paths, latency: latency, delegate: _WatcherDelegate(block: block))
       #elseif os(Windows)
         self._watcher = RDCWatcher(paths: paths, latency: latency, delegate: _WatcherDelegate(block: block))
-      #elseif canImport(Glibc) || canImport(Musl)
+      #elseif canImport(Glibc) || canImport(Musl) || canImport(Android)
         var ipaths: [AbsolutePath: Inotify.WatchOptions] = [:]
 
         // FIXME: We need to recurse here.
@@ -106,7 +106,7 @@ extension NoOpWatcher: _FileWatcher{}
 #elseif os(Windows)
 extension FSWatch._WatcherDelegate: RDCWatcherDelegate {}
 extension RDCWatcher: _FileWatcher {}
-#elseif canImport(Glibc) || canImport(Musl)
+#elseif canImport(Glibc) || canImport(Musl) || canImport(Android)
 extension FSWatch._WatcherDelegate: InotifyDelegate {}
 extension Inotify: _FileWatcher{}
 #elseif os(macOS)
@@ -296,7 +296,7 @@ public final class RDCWatcher {
     }
 }
 
-#elseif canImport(Glibc) || canImport(Musl)
+#elseif canImport(Glibc) || canImport(Musl) || canImport(Android)
 
 /// The delegate for receiving inotify events.
 public protocol InotifyDelegate {
diff --git a/swift-tools-support-core/Sources/TSCUtility/Tracing.swift b/swift-tools-support-core/Sources/TSCUtility/Tracing.swift
index c32d6a5..b53d26c 100644
--- a/swift-tools-support-core/Sources/TSCUtility/Tracing.swift
+++ b/swift-tools-support-core/Sources/TSCUtility/Tracing.swift
@@ -92,7 +92,7 @@ public struct TracingEvent: TracingEventProtocol, Codable, Sendable {
         self.ts = ts
         self.startTs = startTs
     }
-    #elseif canImport(Glibc)
+    #elseif canImport(Glibc) || canImport(Android)
     public init(
         cat: String,
         name: String,
diff --git a/swiftpm/Sources/Basics/Environment/Environment.swift b/swiftpm/Sources/Basics/Environment/Environment.swift
index 7d065982b..2d076362e 100644
--- a/swiftpm/Sources/Basics/Environment/Environment.swift
+++ b/swiftpm/Sources/Basics/Environment/Environment.swift
@@ -19,6 +19,8 @@ import Musl
 #elseif os(Windows)
 import CRT
 import WinSDK
+#elseif canImport(Android)
+import Android
 #else
 import Darwin.C
 #endif
