diff --git a/swift/stdlib/public/Platform/android.modulemap b/swift/stdlib/public/Platform/android.modulemap
index 78e7bda9976..dc25e5c3668 100644
--- a/swift/stdlib/public/Platform/android.modulemap
+++ b/swift/stdlib/public/Platform/android.modulemap
@@ -556,6 +556,12 @@ module _bits_sa_family_t [system] {
   header "bits/sa_family_t.h"
   export *
 }
+
+module _bits_sockaddr_storage [system] {
+    header "bits/sockaddr_storage.h"
+    export *
+}
+
 module _bits_stdatomic [system] {
   // Note: this module is not part of 'stdatomic'
   // as it depends on libc++ and forcing it to
diff --git a/swift/utils/build-script-impl b/swift/utils/build-script-impl
index 16e05052609..114e768bdbb 100755
--- a/swift/utils/build-script-impl
+++ b/swift/utils/build-script-impl
@@ -2412,7 +2412,7 @@ for host in "${ALL_HOSTS[@]}"; do
 
                 ;;
             foundation_macros)
-                if [[ ${host} == "macosx"* ]]; then
+                if [[ ${host} == "macosx"* ]] || [[ "${host}" == "android-"* ]]; then
                     echo "Skipping Foundation Macros on OS X -- Foundation is part of the OS on this platform"
                     continue
                 fi
@@ -2601,6 +2601,7 @@ for host in "${ALL_HOSTS[@]}"; do
                 if [[ "${host}" == "android-"* ]]; then
                     cmake_options+=(
                         -DCMAKE_HAVE_LIBC_PTHREAD=True
+                        -DSwiftFoundation_MODULE_TRIPLE:STRING="${ANDROID_ARCH}-unknown-linux-android"
                     )
                 fi
                 ;;
@@ -3113,7 +3113,7 @@ for host in "${ALL_HOSTS[@]}"; do
                 ;;
             foundation|foundation_static|foundation_macros)
                 # FIXME: Foundation doesn't build from the script on OS X
-                if [[ ${host} == "macosx"* ]]; then
+                if [[ ${host} == "macosx"* ]] || [[ "${host}" == "android-"* && "${product}" == "foundation_macros" ]]; then
                     echo "Skipping Foundation on OS X -- Foundation does not build for this platform"
                     continue
                 fi
diff --git a/swift/utils/swift_build_support/swift_build_support/targets.py b/swift/utils/swift_build_support/swift_build_support/targets.py
index 9932b854cb6..ad3ac757665 100644
--- a/swift/utils/swift_build_support/swift_build_support/targets.py
+++ b/swift/utils/swift_build_support/swift_build_support/targets.py
@@ -167,9 +167,10 @@ class AndroidPlatform(Platform):
         options = cmake.CMakeOptions()
         options.define('CMAKE_SYSTEM_NAME', 'Android')
         options.define('CMAKE_SYSTEM_VERSION' , args.android_api_level)
-        options.define('CMAKE_SYSTEM_PROCESSOR', args.android_arch if not
-                       args.android_arch == 'armv7'
-                       else 'armv7-a')
+        arm_arch_to_abi = { 'armv7' : 'armeabi-v7a', 'aarch64' : 'arm64-v8a' }
+        options.define('CMAKE_ANDROID_ARCH_ABI', args.android_arch if not
+                       args.android_arch.startswith('a')
+                       else arm_arch_to_abi[args.android_arch])
         options.define('CMAKE_ANDROID_NDK:PATH', args.android_ndk)
         return options
 
diff --git a/swift-corelibs-foundation/CMakeLists.txt b/swift-corelibs-foundation/CMakeLists.txt
index 7f290d16..95366592 100644
--- a/swift-corelibs-foundation/CMakeLists.txt
+++ b/swift-corelibs-foundation/CMakeLists.txt
@@ -55,6 +55,7 @@ set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
 set(CMAKE_Swift_MODULE_DIRECTORY ${CMAKE_BINARY_DIR}/swift)
+set(CMAKE_SHARED_LINKER_FLAGS "")
 
 option(BUILD_SHARED_LIBS "build shared libraries" ON)
 
diff --git a/swift-corelibs-foundation/Sources/Foundation/CMakeLists.txt b/swift-corelibs-foundation/Sources/Foundation/CMakeLists.txt
index 016bf294..5c42986a 100644
--- a/swift-corelibs-foundation/Sources/Foundation/CMakeLists.txt
+++ b/swift-corelibs-foundation/Sources/Foundation/CMakeLists.txt
@@ -174,6 +174,12 @@
     target_link_libraries(Foundation PUBLIC
         swiftDispatch)
 endif()
+  if(${CMAKE_SYSTEM_NAME} STREQUAL Android)
+    target_link_libraries(Foundation PRIVATE android-spawn)
+    list(GET CMAKE_FIND_ROOT_PATH 0 SPAWN_DIR)
+    target_include_directories(Foundation PUBLIC ${SPAWN_DIR}/usr/include)
+    target_link_directories(Foundation PUBLIC ${SPAWN_DIR}/usr/lib)
+  endif()
 
 if(LINKER_SUPPORTS_BUILD_ID)
   target_link_options(Foundation PRIVATE "LINKER:--build-id=sha1")
