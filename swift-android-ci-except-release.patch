diff --git a/swift-build/Sources/SWBUtil/Lock.swift b/swift-build/Sources/SWBUtil/Lock.swift
index 2135ce6..fbff6f6 100644
--- a/swift-build/Sources/SWBUtil/Lock.swift
+++ b/swift-build/Sources/SWBUtil/Lock.swift
@@ -14,6 +14,8 @@
 public import os
 #elseif os(Windows)
 public import WinSDK
+#elseif canImport(Android)
+public import Android
 #else
 public import SWBLibc
 #endif
diff --git a/swift-tools-support-core/Sources/TSCBasic/Process/Process.swift b/swift-tools-support-core/Sources/TSCBasic/Process/Process.swift
index 346bd4e..928bf80 100644
--- a/swift-tools-support-core/Sources/TSCBasic/Process/Process.swift
+++ b/swift-tools-support-core/Sources/TSCBasic/Process/Process.swift
@@ -1316,7 +1316,7 @@ extension Process: Hashable {
 // MARK: - Private helpers
 
 #if !os(Windows)
-#if canImport(Darwin) || os(FreeBSD) || os(OpenBSD)
+#if canImport(Darwin) || canImport(Android) || os(OpenBSD) || os(FreeBSD)
 public typealias swiftpm_posix_spawn_file_actions_t = posix_spawn_file_actions_t?
 #else
 public typealias swiftpm_posix_spawn_file_actions_t = posix_spawn_file_actions_t
diff --git a/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift b/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift
index ffa6b7f3f..abe453232 100644
--- a/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift
+++ b/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift
@@ -24,6 +24,10 @@ import struct TSCBasic.ByteString
 import struct TSCBasic.SHA256
 import Workspace
 
+#if canImport(Android)
+import Android
+#endif
+
 // Format for the .zip.json files.
 struct Artifact: Codable {
     var platform: Workspace.PrebuiltsManifest.Platform
diff --git a/swiftpm/Utilities/bootstrap b/swiftpm/Utilities/bootstrap
index 156bf002a..d891da556 100755
--- a/swiftpm/Utilities/bootstrap
+++ b/swiftpm/Utilities/bootstrap
@@ -941,6 +941,7 @@ def get_swiftpm_flags(args):
             build_flags += ["--arch", "x86_64", "--arch", "arm64"]
         elif cross_compile_hosts.startswith('android-'):
             build_flags.extend(["--destination", args.cross_compile_config])
+            build_flags.extend(["-Xlinker", "-landroid-spawn"])
         else:
             logging.error("cannot cross-compile for %s", cross_compile_hosts)
             raise SystemExit(1)
