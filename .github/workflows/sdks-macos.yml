name: SDKs (macOS)
on:
  pull_request:
  schedule:
    - cron: '0 21 * * *'
  push:
    branches: '*'
jobs:
  build-toolchain:
    # The macos-14 GH Runner is ARM, which cannot run the Android emulator
    runs-on: macos-13
    timeout-minutes: 600
    strategy:
      matrix:
        swift_branch: ['release/5.10', 'release/6.0', 'main']
      fail-fast: false
    steps:
      - name: Install Build Tools
        run: brew install cmake ninja autoconf automake libtool pkg-config git-lfs
      - name: Clone Swift
        run: git clone https://github.com/swiftlang/swift.git --branch ${{ matrix.swift_branch }} --single-branch
      - name: Update Checkout
        run: swift/utils/update-checkout --clone --scheme ${{ matrix.swift_branch }}

        #--build-subdir=#{build} \
        #--host-cc=#{which(ENV.cc)} \
        #--host-cxx=#{which(ENV.cxx)} \
        #--jobs=#{ENV.make_jobs} \
        #--workspace=#{workspace} \
        #--install-destdir=#{prefix} \
        #--toolchain-prefix=#{toolchain_prefix} \
        #--install-prefix=#{install_prefix} \
        #--lldb-extra-cmake-args=-DPython3_EXECUTABLE=#{which("python3.11")} \
        #--swift-install-components=#{swift_components.join(";")} \
        #--llvm-install-components=#{llvm_components.join(";")} \
        #--host-target=macosx-#{Hardware::CPU.arch} \
        #--darwin-deployment-version-osx=#{MacOS.version} \
        #--swift-darwin-supported-archs=#{Hardware::CPU.arch} \
        #--swift-darwin-module-archs=#{Hardware::CPU.arch} \

        # install-lldb excluded; works in 5.10, but fails in 6.0 and main
        # with error: 2024-07-28T23:01:02.0005710Z Error copying directory from "/Users/runner/work/swift-android-sdk/swift-android-sdk/build/Ninja-Release/swift-macosx-arm64/lib/swift/embedded/" to "/Users/runner/work/swift-android-sdk/swift-android-sdk/build/Ninja-Release/lldb-macosx-arm64/bin/LLDB.framework/Versions/A/Resources/Swift/embedded".
        #--install-lldb \

      - name: Build Swift
        if: false
        run: |
          swift/utils/build-script \
          --release --no-assertions \
          --no-swift-stdlib-assertions \
          --lldb --llbuild --swiftpm --swift-driver \
          --swiftdocc --indexstore-db --sourcekit-lsp \
          --verbose-build \
          --swift-include-tests=0 \
          --llvm-include-tests=0 \
          --lldb-configure-tests=0 \
          --skip-build-benchmarks \
          --build-swift-private-stdlib=0 \
          --install-swift \
          --install-llvm \
          --install-llbuild \
          --install-swiftpm \
          --install-swift-driver \
          --install-swiftsyntax \
          --install-swiftdocc \
          --install-sourcekit-lsp \
          --build-swift-dynamic-stdlib=0 \
          --build-swift-dynamic-sdk-overlay=0 \
          --swift-enable-backtracing=0 \
          --stdlib-deployment-targets= \
          --lldb-use-system-debugserver

      # based on https://github.com/swiftlang/swift/blob/main/utils/build-toolchain
      - name: Build Toolchain
        run: |
          RESULT_DIR=$PWD
          SWIFT_PACKAGE=buildbot_osx_package
          OS_SUFFIX=osx

          BUNDLE_PREFIX="swift-android"
          BRANCH_NAME=${{ matrix.swift_branch }}
          BUILD_NAME=${BRANCH_NAME/\//-}

          TOOLCHAIN_VERSION="${BUILD_NAME}"
          TOOLCHAIN_NAME="swift-macos-toolchain-${TOOLCHAIN_VERSION}"
          ARCHIVE="${TOOLCHAIN_NAME}-${OS_SUFFIX}.tar.gz"
          SYM_ARCHIVE="${TOOLCHAIN_NAME}-${OS_SUFFIX}-symbols.tar.gz"
          BUNDLE_IDENTIFIER="${BUNDLE_PREFIX}.${TOOLCHAIN_VERSION}"
          DISPLAY_NAME_SHORT="Swift Toolchain"
          DISPLAY_NAME="${DISPLAY_NAME_SHORT} ${TOOLCHAIN_VERSION}"

          SWIFT_INSTALLABLE_PACKAGE="${RESULT_DIR}/${ARCHIVE}"
          SWIFT_INSTALL_DIR="${RESULT_DIR}/swift-install"
          SWIFT_INSTALL_SYMROOT="${RESULT_DIR}/swift-symroot"
          SWIFT_TOOLCHAIN_DIR="/Library/Developer/Toolchains/${TOOLCHAIN_NAME}.xctoolchain"
          SYMBOLS_PACKAGE="${RESULT_DIR}/${SYM_ARCHIVE}"
          DRY_RUN="${DRY_RUN}"
          DISTCC_FLAG="${DISTCC_FLAG}"
          PRESET_FILE_FLAGS="${PRESET_FILE_FLAGS}"
          SCCACHE_FLAG="${SCCACHE_FLAG}"

          swift/utils/build-script --preset="buildbot_osx_package" \
            install_destdir="${SWIFT_INSTALL_DIR}" \
            installable_package="${SWIFT_INSTALLABLE_PACKAGE}" \
            install_toolchain_dir="${SWIFT_TOOLCHAIN_DIR}" \
            install_symroot="${SWIFT_INSTALL_SYMROOT}" \
            symbols_package="${SYMBOLS_PACKAGE}" \
            darwin_toolchain_bundle_identifier="${BUNDLE_IDENTIFIER}" \
            darwin_toolchain_display_name="${DISPLAY_NAME}" \
            darwin_toolchain_display_name_short="${DISPLAY_NAME_SHORT}" \
            darwin_toolchain_xctoolchain_name="${TOOLCHAIN_NAME}" \
            darwin_toolchain_version="${TOOLCHAIN_VERSION}" \
            darwin_toolchain_alias="Local" \
            darwin_toolchain_require_use_os_runtime="${REQUIRE_USE_OS_RUNTIME}"

      - name: Show Created Files
        run: |
          find .

      - name: "Upload Build Artifacts"
        uses: actions/upload-artifact@v4
        with:
          path: '*.tar.gz'

