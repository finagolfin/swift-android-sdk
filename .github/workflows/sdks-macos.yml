name: SDKs (macOS)
on:
  #pull_request:
  #schedule:
    #- cron: '0 21 * * *'
  push:
    branches: '*'
jobs:
  build-toolchain:
    # The macos-14 GH Runner is ARM, which cannot run the Android emulator
    runs-on: macos-14
    timeout-minutes: 1000
    strategy:
      matrix:
        arch: [aarch64, x86_64, armv7]
        swift_branch: ['release/5.10']
        #swift_branch: ['release/5.10', 'release/6.0', 'main']
      fail-fast: false
    steps:
      - name: Install Tools
        run: brew install tree

      - name: "Install NDK"
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27
          add-to-path: false

      - name: Set NDK
        run: |
          echo "NDK_PATH=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      - name: Check NDK
        run: |
          # /Users/runner/hostedtoolcache/ndk/r27/x64
          echo "NDK_PATH: ${NDK_PATH}"
          ls ${NDK_PATH}

      - name: Install Toolchain
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "5.10.1"

      - name: Set Swift Toolchain
        run: |
          swift --version
          which swift
          echo "TOOLCHAIN=$(dirname $(dirname $(which swift)))" >> $GITHUB_ENV

      - name: Check Swift Toolchain
        run: |
          # /Users/runner/hostedtoolcache/swift-macOS/5.10.1/x64/usr
          echo "TOOLCHAIN: ${TOOLCHAIN}"
          ${TOOLCHAIN}/bin/swift --version

      - name: Fetch Swift Android SDK
        run: |
          SDK_DIR="swift-5.10-android-24-sdk"
          wget -q https://github.com/finagolfin/swift-android-sdk/releases/download/5.10/${SDK_DIR}.tar.xz
          tar xf ${SDK_DIR}.tar.xz
          ls ${SDK_DIR}
          echo "SDK=${PWD}/${SDK_DIR}" >> $GITHUB_ENV

      - name: Setup Swift Android SDK
        run: |
          ls -la ${SDK}/usr/lib/swift/clang
          rm -vf ${SDK}/usr/lib/swift/clang
          ln -sf ${TOOLCHAIN}/lib/clang/15.0.0 ${SDK}/usr/lib/swift/clang
          ls -la ${SDK}/usr/lib/swift/clang
          ls ${SDK}/usr/lib/swift/clang/include

      - name: Build Android Sample 
        run: |
          #ARCH=aarch64
          #ARCH=x86_64
          ARCH=${{ matrix.arch }}

          #NDK_ARCH="${ARCH}-linux-android"
          #NDK_ARCH="arm-linux-androideabi"
          case $ARCH in
            "aarch64"|"x86_64")
              NDK_ARCH="${ARCH}-linux-android"
              ;;
            "armv7")
              NDK_ARCH="arm-linux-androideabi"
              ;;
            *)
              echo "Unsupported architcture: ${ARCH}"
              exit 1
              ;;
          esac


          echo "NDK_PATH: ${NDK_PATH}"
          NDK=${NDK_PATH}/toolchains/llvm/prebuilt/darwin-x86_64
          echo "NDK: ${NDK}"

          cat > android-${ARCH}.json << EOF
          {
              "version": 1,
              "target": "${ARCH}-unknown-linux-android24",
              "toolchain-bin-dir": "${TOOLCHAIN}/bin",
              "sdk": "${NDK}/sysroot",
              "extra-cc-flags": [
                  "-fPIC"
              ],
              "extra-swiftc-flags": [
                  "-resource-dir", "${SDK}/usr/lib/swift",
                  "-tools-directory", "${NDK}/bin",
                  "-L", "${SDK}/usr/lib/${NDK_ARCH}"
              ],
              "extra-cpp-flags": [
                  "-lstdc++"
              ]
          }
          EOF

          cat android-${ARCH}.json

          # create a simple "Hello World" sample
          rm -rf swift-demo
          mkdir swift-demo
          pushd swift-demo

          ${TOOLCHAIN}/bin/swift package init --type=executable

          cat >> Sources/main.swift << EOF
          import Foundation

          print("Current Date: \(Date())")

          #if swift(>=6.0)
          print("Hello, Swift 6!")
          #elseif swift(>=5.0)
          print("Hello, Swift 5!")
          #endif
          EOF

          popd

          ${TOOLCHAIN}/bin/swift build -c release --verbose --package-path swift-demo --destination android-${ARCH}.json -Xlinker -rpath -Xlinker \$ORIGIN/$SDK_NAME/usr/lib/$NDK_ARCH

          # prepare files to push
          mkdir android-swift-test
          pushd android-swift-test

          cp ../swift-demo/.build/${{ matrix.arch }}-unknown-linux-android24/release/swift-demo .
          cp ${NDK}/sysroot/usr/lib/${NDK_ARCH}/libc++_shared.so .
          cp ${SDK}/usr/lib/${NDK_ARCH}/*.so .

          du -skhc *
          popd

      - name: Test Swift Android Executable (x86_64)
        if: ${{ matrix.arch == 'x86_64' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 24
          arch: x86_64
          script: |
            adb shell mkdir -p /data/local/tmp/android-swift-test
            adb push android-swift-test/* /data/local/tmp/android-swift-test
            adb shell LD_LIBRARY_PATH=/data/local/tmp/android-swift-test /data/local/tmp/android-swift-test/swift-demo

      - name: Test Swift Android Executable (arm64-v8)
        if: ${{ matrix.arch == 'aarch64' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: arm64-v8a
          script: |
            adb shell mkdir -p /data/local/tmp/android-swift-test
            adb push android-swift-test/* /data/local/tmp/android-swift-test
            adb shell LD_LIBRARY_PATH=/data/local/tmp/android-swift-test /data/local/tmp/android-swift-test/swift-demo

