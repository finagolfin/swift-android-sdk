diff --git a/llbuild/CMakeLists.txt b/llbuild/CMakeLists.txt
index 766e38e7..ad4d369f 100644
--- a/llbuild/CMakeLists.txt
+++ b/llbuild/CMakeLists.txt
@@ -158,6 +158,7 @@ elseif(MSVC)
 else ()
   add_compile_options(
     # Enable additional Clang warnings.
+    "$<$<COMPILE_LANGUAGE:CXX>:-D_FORTIFY_SOURCE=0>"
     "$<$<COMPILE_LANGUAGE:CXX>:-fno-rtti>"
     "$<$<COMPILE_LANGUAGE:CXX>:-fno-exceptions>"
     "$<$<COMPILE_LANGUAGE:CXX>:-Wbool-conversion>"
diff --git a/llbuild/lib/llvm/Support/CMakeLists.txt b/llbuild/lib/llvm/Support/CMakeLists.txt
index 9d5a714b..3f8f8c1d 100644
--- a/llbuild/lib/llvm/Support/CMakeLists.txt
+++ b/llbuild/lib/llvm/Support/CMakeLists.txt
@@ -66,4 +66,15 @@ endif()
 
 if(${CMAKE_SYSTEM_NAME} MATCHES "Android|Darwin|Linux")
   target_link_libraries(llvmSupport PRIVATE curses)
+if(${CMAKE_SYSTEM_NAME} MATCHES "Android")
+  target_link_libraries(llvmSupport PRIVATE android-spawn)
+  list(GET CMAKE_FIND_ROOT_PATH 0 SPAWN_DIR)
+  target_include_directories(llvmSupport
+    PUBLIC
+    ${SPAWN_DIR}/usr/include
+  )
+  target_link_directories(llvmSupport PUBLIC
+    ${SPAWN_DIR}/usr/lib
+  )
+endif()
 endif()
diff --git a/llbuild/unittests/CMakeLists.txt b/llbuild/unittests/CMakeLists.txt
index 92a1ee38..52273afb 100644
--- a/llbuild/unittests/CMakeLists.txt
+++ b/llbuild/unittests/CMakeLists.txt
@@ -6,4 +6,4 @@ function(add_llbuild_unittest test_dirname)
 add_subdirectory(CAPI)
 add_subdirectory(Core)
 add_subdirectory(BuildSystem)
-add_subdirectory(Ninja)
+#add_subdirectory(Ninja)
diff --git a/swift-certificates/Sources/X509/Verifier/RFC5280/URIConstraints.swift b/swift-certificates/Sources/X509/Verifier/RFC5280/URIConstraints.swift
--- a/swift-certificates/Sources/X509/Verifier/RFC5280/URIConstraints.swift
+++ b/swift-certificates/Sources/X509/Verifier/RFC5280/URIConstraints.swift
@@ -21,6 +21,9 @@
 #elseif canImport(Musl)
 import Musl
 import CoreFoundation
+#elseif canImport(Android)
+import Android
+import CoreFoundation
 #elseif canImport(Darwin)
 import Darwin
 #endif
diff --git a/swift-build/Sources/SWBUtil/Lock.swift b/swift-build/Sources/SWBUtil/Lock.swift
index 2135ce6..fbff6f6 100644
--- a/swift-build/Sources/SWBUtil/Lock.swift
+++ b/swift-build/Sources/SWBUtil/Lock.swift
@@ -14,6 +14,8 @@
 public import os
 #elseif os(Windows)
 public import WinSDK
+#elseif canImport(Android)
+public import Android
 #else
 public import SWBLibc
 #endif
diff --git a/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift b/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift
index ffa6b7f3f..abe453232 100644
--- a/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift
+++ b/swiftpm/Sources/swift-build-prebuilts/BuildPrebuilts.swift
@@ -24,6 +24,10 @@ import struct TSCBasic.ByteString
 import struct TSCBasic.SHA256
 import Workspace
 
+#if canImport(Android)
+import Android
+#endif
+
 // Format for the .zip.json files.
 struct Artifact: Codable {
     var platform: Workspace.PrebuiltsManifest.Platform
diff --git a/swiftpm/Utilities/bootstrap b/swiftpm/Utilities/bootstrap
index 156bf002a..d891da556 100755
--- a/swiftpm/Utilities/bootstrap
+++ b/swiftpm/Utilities/bootstrap
@@ -941,6 +941,7 @@ def get_swiftpm_flags(args):
             build_flags += ["--arch", "x86_64", "--arch", "arm64"]
         elif cross_compile_hosts.startswith('android-'):
             build_flags.extend(["--destination", args.cross_compile_config])
+            build_flags.extend(["-Xlinker", "-landroid-spawn"])
         else:
             logging.error("cannot cross-compile for %s", cross_compile_hosts)
             raise SystemExit(1)
